{"version":3,"file":"bundle.js","mappings":"qSAQO,IAAMA,EAAb,GACI,WAAYC,EAAMC,I,4FAAW,SACzBC,KAAKF,KAAOA,EACZE,KAAKD,UAAYA,KCTzBE,MAAM,cAON,IAEMC,EAAK,IAAIL,EAAO,SAAU,WAEhCM,QAAQC,IAJK,SDTA,QACK,UACJ,ICYdD,QAAQC,IDTGC,ICUXF,QAAQC,IAAIF,I","sources":["webpack://aula69/./src/modulo1.js","webpack://aula69/./src/index.js"],"sourcesContent":["const nome = 'Vitor';\r\nconst sobrenome = 'Queiroz';\r\nconst idade = 19;\r\n\r\nfunction soma (x, y) {\r\n    return x + y; \r\n};\r\n\r\nexport class Pessoa {\r\n    constructor(nome, sobrenome) {\r\n        this.nome = nome;\r\n        this.sobrenome = sobrenome;\r\n    }\r\n}\r\n\r\nexport {nome, sobrenome, idade, soma as math} \r\n//e eu posso exportar uma variavel com outro nome tambem, usando \"as\", por exemplo posso exportar a funcao soma como math: soma as math\r\n//Posso exportar automaticamente uma funcao/variavel/classe colocando export antes da mesma, por exemplo: export nome = 'Vitor';","const gersin = 'gerson';\r\n\r\nalert('Ola mundo!')\r\n\r\nimport {nome as nome2, sobrenome, idade, math, Pessoa} from './modulo1.js'; //ao usar 'nome as nome2' eu to renomeando a constante que vem do meu modulo1\r\n\r\n//Caso eu queria importar todo o conteudo de um modulo eu utilizo:\r\n//import * as 'nomeDoModulo' from 'localDoModulo'\r\n\r\nconst nome = 'Gersin'\r\n\r\nconst p1 = new Pessoa('Gerson', 'Arantes')\r\n\r\nconsole.log(nome, nome2, sobrenome, idade);\r\nconsole.log(math(6, 7));\r\nconsole.log(p1)\r\n"],"names":["Pessoa","nome","sobrenome","this","alert","p1","console","log","x"],"sourceRoot":""}